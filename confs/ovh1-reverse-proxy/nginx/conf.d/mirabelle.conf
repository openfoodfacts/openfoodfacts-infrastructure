
server {
    server_name  mirabelle.openfoodfacts.org;

    access_log  /var/log/nginx/mirabelle.log  main;
    error_log   /var/log/nginx/mirabelle_errors.log debug;

    #root /var/www/mirabelle;


    # SQL requests can be very long and URI can lead into 414 error "Request-URI Too Large"
    # nginx default to 4 8k
    large_client_header_buffers 6 32k;

    #client_max_body_size 8M;
    #client_body_buffer_size 128k;

    #client_header_buffer_size 512k;

    location / {

      # Use If-Modified-Since to use browser cache
      #proxy_cache_revalidate   on;

      add_header 'Access-Control-Allow-Origin' '*'  always;

      # Avoid error "upstream sent too big header"
      proxy_busy_buffers_size   512k;
      proxy_buffers   4 512k;
      proxy_buffer_size   256k;

      # request can be quite long: increasing the 300s default
      proxy_read_timeout 420s;

      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_redirect off;
      proxy_pass http://10.1.0.106/;
    }


    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mirabelle.openfoodfacts.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mirabelle.openfoodfacts.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = mirabelle.openfoodfacts.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name  mirabelle.openfoodfacts.org;

    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot


}
