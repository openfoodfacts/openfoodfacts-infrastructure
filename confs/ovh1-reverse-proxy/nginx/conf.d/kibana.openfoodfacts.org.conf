
server {
    server_name  kibana.openfoodfacts.org;

    access_log  /var/log/nginx/kibana.off.log  main;
    error_log   /var/log/nginx/kibana.off_errors.log;

    root /var/www/kibana;

    auth_basic "";
    auth_basic_user_file /etc/nginx/kibana.htpasswd;
 
    # no basic auth to allow monitoring (but not that as js is blocked it won't really display)
    location = /status {
        auth_basic off;
        proxy_pass http://10.1.0.203:5601$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 90;
        client_max_body_size 512M;
    }

    location / {
        proxy_pass http://10.1.0.203:5601$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 90;
        client_max_body_size 512M;
    }

    location ~ /.well-known {
        auth_basic off;
        allow all;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot



    ssl_certificate /etc/letsencrypt/live/kibana.openfoodfacts.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/kibana.openfoodfacts.org/privkey.pem; # managed by Certbot
}

server {
    if ($host = kibana.openfoodfacts.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name  kibana.openfoodfacts.org;
    return 404; # managed by Certbot

}
